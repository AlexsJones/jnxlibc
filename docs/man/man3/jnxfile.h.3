.TH "jnxfile.h" 3 "Sat Jun 7 2014" "jnxlibc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jnxfile.h \- 
.PP
File manipulation, read/write, kvp plucking and recursive deletion\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stddef\&.h>\fP
.br
\fC#include 'jnxhash\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBjnx_file_kvp_node\fP"
.br
.RI "\fIAn internal representation of the kvp node populated when used in key value pair retrieval from a file\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBjnx_file_kvp_node\fP \fBjnx_file_kvp_node\fP"
.br
.RI "\fIAn internal representation of the kvp node populated when used in key value pair retrieval from a file\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "size_t \fBjnx_file_read\fP (char *path, char **buffer, char *flags)"
.br
.RI "\fIFunction to read the contents of a text file into the buffer\&. \fP"
.ti -1c
.RI "\fBjnx_hashmap\fP * \fBjnx_file_read_kvp\fP (char *path, size_t max_buffer, char *delimiter)"
.br
.RI "\fIFunction to read a file that contains key-value pairs into a linked list\&. \fP"
.ti -1c
.RI "size_t \fBjnx_file_write\fP (char *path, char *data, size_t data_size, char *flags)"
.br
.ti -1c
.RI "int \fBjnx_file_recursive_delete\fP (char *path, int depth)"
.br
.RI "\fIFunction to recursively delete a directory pointed to by path\&. \fP"
.ti -1c
.RI "int \fBjnx_file_mktempdir\fP (char *dirtemplate, char **path)"
.br
.RI "\fIFunction to create a temporary directory on the given path\&. \fP"
.ti -1c
.RI "int \fBjnx_file_exists\fP (char *file)"
.br
.RI "\fIchecks if a file exists \fP"
.in -1c
.SH "Detailed Description"
.PP 
File manipulation, read/write, kvp plucking and recursive deletion\&. 

#include <jnxc_headers/jnxfile\&.h> 
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBjnx_file_kvp_node\fP \fBjnx_file_kvp_node\fP"

.PP
An internal representation of the kvp node populated when used in key value pair retrieval from a file\&. 
.SH "Function Documentation"
.PP 
.SS "jnx_file_exists (char *file)"

.PP
checks if a file exists 
.PP
\fBParameters:\fP
.RS 4
\fIfilepath\fP to check 
.RE
.PP
\fBReturns:\fP
.RS 4
1 on file existance 
.RE
.PP

.SS "jnx_file_mktempdir (char *template, char **path)"

.PP
Function to create a temporary directory on the given path\&. 
.PP
\fBParameters:\fP
.RS 4
\fItemplate\fP is the path to create the directory on 
.br
\fIpath\fP is a pointer to the output buffer char pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
success on 0 
.RE
.PP

.SS "jnx_file_read (char *path, char **buffer, char *flags)"

.PP
Function to read the contents of a text file into the buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP path to the target file for reading 
.br
\fIbuffer\fP that will be filled 
.br
\fIflags\fP are the flags passed (r,rb\&.\&.\&.) 
.RE
.PP
\fBReturns:\fP
.RS 4
Number of bytes read
.RE
.PP
\fBWarning:\fP
.RS 4
it is the users responsibility to manage the memory of the char* 
.RE
.PP

.SS "\fBjnx_hashmap\fP * jnx_file_read_kvp (char *path, size_tmax_buffer, char *flags)"

.PP
Function to read a file that contains key-value pairs into a linked list\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP path to the target file for reading 
.br
\fIdelimiter\fP the token to break the key value pairs on e\&.g\&. '=' 
.br
\fImax_buffer\fP is maximum line size buffer 
.RE
.PP
\fBReturns:\fP
.RS 4
returns a linkedlist of jnx_file_kvp_nodes, i\&.e\&. key-value pairs\&.
.RE
.PP
\fBWarning:\fP
.RS 4
user is responsible for linked list deletion and its node/data 
.RE
.PP

.SS "jnx_file_recursive_delete (char *path, intdepth)"

.PP
Function to recursively delete a directory pointed to by path\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP the provided path will have all its sub directories and files deleted 
.br
\fIdepth\fP defines how deep to recursively delete in a folder structure 
.RE
.PP
\fBReturns:\fP
.RS 4
success on 0
.RE
.PP
\fBWarning:\fP
.RS 4
extremely powerful and can make unrepairable changes to your file system 
.RE
.PP

.SS "size_t jnx_file_write (char *path, char *data, size_tdata_size, char *flags)"

.SH "Author"
.PP 
Generated automatically by Doxygen for jnxlibc from the source code\&.
