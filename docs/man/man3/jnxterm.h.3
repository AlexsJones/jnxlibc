.TH "jnxterm.h" 3 "Mon Feb 17 2014" "jnxlibc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jnxterm.h \- 
.PP
terminal manipulation of colours, stdout and loading spinnders  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBJNX_COL_BLACK\fP   0"
.br
.ti -1c
.RI "#define \fBJNX_COL_RED\fP   1"
.br
.ti -1c
.RI "#define \fBJNX_COL_GREEN\fP   2"
.br
.ti -1c
.RI "#define \fBJNX_COL_YELLOW\fP   3"
.br
.ti -1c
.RI "#define \fBJNX_COL_BLUE\fP   4"
.br
.ti -1c
.RI "#define \fBJNX_COL_MAGENTA\fP   5"
.br
.ti -1c
.RI "#define \fBJNX_COL_CYAN\fP   6"
.br
.ti -1c
.RI "#define \fBJNX_COL_WHITE\fP   7"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBjnx_term_default\fP ()"
.br
.RI "\fIresets to default terminal colors \fP"
.ti -1c
.RI "void \fBjnx_term_color\fP (int fg_col)"
.br
.RI "\fIchanges the terminal color \fP"
.ti -1c
.RI "void \fBjnx_term_printf_in_color\fP (int fg_col, const char *format,\&.\&.\&.)"
.br
.RI "\fIprints a single line in selected color \fP"
.ti -1c
.RI "void \fBjnx_term_load_spinner\fP (int state)"
.br
.RI "\fIstarts/stops a loading spinner in the terminal on another thread \fP"
.ti -1c
.RI "void \fBjnx_term_load_bar\fP (int state)"
.br
.RI "\fIstarts/stops a loading spinner in the terminal on another thread \fP"
.ti -1c
.RI "void \fBjnx_term_override_stdout\fP (char *path)"
.br
.RI "\fIredirects stdout to a file \fP"
.ti -1c
.RI "void \fBjnx_term_reset_stdout\fP (void)"
.br
.RI "\fIresets the stdout back to the current terminal \fP"
.in -1c
.SH "Detailed Description"
.PP 
terminal manipulation of colours, stdout and loading spinnders 

#include <jnxc_headers/jnxterm\&.h> 
.SH "Macro Definition Documentation"
.PP 
.SS "#define JNX_COL_BLACK   0"

.SS "#define JNX_COL_BLUE   4"

.SS "#define JNX_COL_CYAN   6"

.SS "#define JNX_COL_GREEN   2"

.SS "#define JNX_COL_MAGENTA   5"

.SS "#define JNX_COL_RED   1"

.SS "#define JNX_COL_WHITE   7"

.SS "#define JNX_COL_YELLOW   3"

.SH "Function Documentation"
.PP 
.SS "jnx_term_color (intfg_col)"

.PP
changes the terminal color 
.PP
\fBParameters:\fP
.RS 4
\fIfg_col\fP select a color between 0-7 from JNX_COL 
.RE
.PP

.SS "jnx_term_default ()"

.PP
resets to default terminal colors 
.SS "jnx_term_load_bar (intstate)"

.PP
starts/stops a loading spinner in the terminal on another thread 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP toggles between 0 and 1 for off/on 
.RE
.PP

.SS "jnx_term_load_spinner (intstate)"

.PP
starts/stops a loading spinner in the terminal on another thread 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP toggles between 0 and 1 for off/on 
.RE
.PP

.SS "jnx_term_override_stdout (char *path)"

.PP
redirects stdout to a file 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP path of the output file, requires real file path 
.RE
.PP

.SS "jnx_term_printf_in_color (intfg_col, const char *format, \&.\&.\&.)"

.PP
prints a single line in selected color 
.PP
\fBParameters:\fP
.RS 4
\fIfg_col\fP select a color between 0-7 from JNX_COL 
.br
\fIformat\fP formatted string 
.br
\fI\&.\&.\&.\fP formatted string optional arguments 
.RE
.PP

.SS "jnx_term_reset_stdout (void)"

.PP
resets the stdout back to the current terminal 
.SH "Author"
.PP 
Generated automatically by Doxygen for jnxlibc from the source code\&.
