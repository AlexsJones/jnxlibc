.TH "jnxlog.h" 3 "Sun Feb 1 2015" "jnxlibc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jnxlog.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <time\&.h>\fP
.br
\fC#include 'jnxtypes\&.h'\fP
.br
\fC#include 'jnxthread\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBjnx_log_config\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEFAULT_CONTEXT\fP   NULL"
.br
.ti -1c
.RI "#define \fBJNX_LOG_CONTEXT\fP(X)   \fBjnx_log_config\fP *X"
.br
.ti -1c
.RI "#define \fBJNX_LOG\fP(CONFIG,  FORMATTER, \&.\&.\&.)   \fBjnx_log\fP(CONFIG,__FILE__,__FUNCTION__,__LINE__,FORMATTER, ## __VA_ARGS__);"
.br
.RI "\fIa macro for logging that auto completes file,function,line information \fP"
.ti -1c
.RI "#define \fBJNX_LOG_CREATE\fP(PATH,  OUTPUT)   \fBjnx_log_create\fP(PATH,OUTPUT);"
.br
.RI "\fIcreates a log context \fP"
.ti -1c
.RI "#define \fBJNX_LOG_DESTROY\fP(X)   \fBjnx_log_destroy\fP(X);"
.br
.RI "\fIdestroys the provided log context \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBjnx_log_type\fP \fBjnx_log_type\fP"
.br
.ti -1c
.RI "typedef struct \fBjnx_log_config\fP \fBjnx_log_config\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBjnx_log_type\fP { \fBCONSOLETYPE\fP, \fBFILETYPE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBjnx_log_config\fP * \fBjnx_log_create\fP (const \fBjnx_char\fP *path, \fBjnx_log_type\fP output)"
.br
.RI "\fIcreates a log context for the given logtype \fP"
.ti -1c
.RI "void \fBjnx_log_destroy\fP (\fBjnx_log_config\fP **config)"
.br
.RI "\fIdestroys the current log context \fP"
.ti -1c
.RI "void \fBjnx_log\fP (\fBjnx_log_config\fP *config, const \fBjnx_char\fP *file, const \fBjnx_char\fP *function, const \fBjnx_uint32\fP line, const \fBjnx_char\fP *format,\&.\&.\&.)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEFAULT_CONTEXT   NULL"

.SS "JNX_LOG(CONFIG, FORMATTER,  \&.\&.\&.)   \fBjnx_log\fP(CONFIG,__FILE__,__FUNCTION__,__LINE__,FORMATTER, ## __VA_ARGS__);"

.PP
a macro for logging that auto completes file,function,line information 
.PP
\fBParameters:\fP
.RS 4
\fICONFIG\fP is the context to use, can be DEFAULT_CONTEXT or NULL 
.br
\fIFORMATTER\fP is the const jnx_char* formatter for displaying the subsequent args 
.br
\fI\&.\&.\&.\fP any optional arguments to be rendered by the formatter 
.RE
.PP

.SS "#define JNX_LOG_CONTEXT(X)   \fBjnx_log_config\fP *X"

.SS "JNX_LOG_CREATE(PATH, OUTPUT)   \fBjnx_log_create\fP(PATH,OUTPUT);"

.PP
creates a log context 
.PP
\fBParameters:\fP
.RS 4
\fIPATH\fP is an optional value for log output path when using OUTPUT=FILETYPE, can be NULL 
.br
\fIOUTPUT\fP is the context output can be either FILETYPE or CONSOLETYPE, CONSOLETYPE can be NULL 
.RE
.PP
\fBReturns:\fP
.RS 4
JNX_LOG_CONTEXT which is a macro surrounding \fBjnx_log_config\fP 
.RE
.PP

.SS "JNX_LOG_DESTROY(X)   \fBjnx_log_destroy\fP(X);"

.PP
destroys the provided log context 
.PP
\fBParameters:\fP
.RS 4
\fIX\fP is a pointer to pointer of log context 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBjnx_log_config\fP  \fBjnx_log_config\fP"

.SS "typedef enum \fBjnx_log_type\fP  \fBjnx_log_type\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBjnx_log_type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICONSOLETYPE \fP\fP
.TP
\fB\fIFILETYPE \fP\fP
.SH "Function Documentation"
.PP 
.SS "void jnx_log (\fBjnx_log_config\fP * config, const \fBjnx_char\fP * file, const \fBjnx_char\fP * function, const \fBjnx_uint32\fP line, const \fBjnx_char\fP * format,  \&.\&.\&.)"

.SS "jnx_log_create (const \fBjnx_char\fP * path, \fBjnx_log_type\fP output)"

.PP
creates a log context for the given logtype 
.PP
\fBParameters:\fP
.RS 4
\fIpath\fP is the filepath to set for an output of FILETYPE, can be NULL if using CONSOLETYPE 
.br
\fIoutput\fP defines the logger type, either FILETYPE or CONSOLETYPE 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBjnx_log_config\fP which is the current log context 
.RE
.PP

.SS "jnx_log_destroy (\fBjnx_log_config\fP ** config)"

.PP
destroys the current log context 
.PP
\fBParameters:\fP
.RS 4
\fIconfig\fP is a pointer to pointer of current log context 
.RE
.PP
\fBWarning:\fP
.RS 4
passing a null object will trigger an assertion 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for jnxlibc from the source code\&.
