cmake_minimum_required(VERSION 2.8)
set(INSTALL_PREFIX /usr)
project(jnxlibc)

file(MAKE_DIRECTORY jnxc_headers)
file(GLOB HEADERS_CP "src/**/*.h")
file(GLOB RAW_SRC "src/**/*.c")
file(COPY ${HEADERS_CP} DESTINATION jnxc_headers)

include_directories(${PROJECT_INC_DIR}src/alg)
include_directories(${PROJECT_INC_DIR}src/bug)
include_directories(${PROJECT_INC_DIR}src/dat)
include_directories(${PROJECT_INC_DIR}src/io)
include_directories(${PROJECT_INC_DIR}src/ipc)
include_directories(${PROJECT_INC_DIR}src/net)
include_directories(${PROJECT_INC_DIR}src/sig)
include_directories(${PROJECT_INC_DIR}src/sys)
include_directories(${PROJECT_INC_DIR}src/thr)

option(RELEASE "Run in release mode" OFF)
if(RELEASE)
  message("RELEASE")
  ADD_DEFINITIONS(-DRELEASE)
else()
  message("DEBUG")
  ADD_DEFINITIONS(-DDEBUG)
endif()

option(RUN_TESTS "Run jnxlibc tests" OFF)
if(RUN_TESTS)
    execute_process(COMMAND cmake . WORKING_DIRECTORY test/unit)
    execute_process(COMMAND make WORKING_DIRECTORY test/unit)
    execute_process(COMMAND ./test_run WORKING_DIRECTORY test/unit)
endif()
set(CMAKE_C_FLAGS "-Wall")
set(CMAKE_C_FLAGS_DEBUG "-g -rdynamic")
set(CMAKE_C_FLAGS_RELEASE "-O2")

IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64") 
  ADD_DEFINITIONS(-fPIC) 
ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")

add_library(jnxcs STATIC ${RAW_SRC}) 
add_library(jnxc SHARED ${RAW_SRC})
target_link_libraries(jnxc pthread)
target_link_libraries(jnxcs pthread)
install(TARGETS jnxcs DESTINATION ${INSTALL_PREFIX}/lib)
install(TARGETS jnxc DESTINATION ${INSTALL_PREFIX}/lib)
install(DIRECTORY jnxc_headers DESTINATION ${INSTALL_PREFIX}/include)
