cmake_minimum_required(VERSION 2.8)
set(CMAKE_INSTALL_PREFIX /usr)
project(jnxlibc)
AUX_SOURCE_DIRECTORY(src/** RAW_SRC)

file(MAKE_DIRECTORY jnxc_headers)
file(GLOB HEADERS_CP "src/**/*.h")
file(GLOB RAW_SRC "src/**/*.c")
file(COPY ${HEADERS_CP} DESTINATION jnxc_headers)

include_directories(${PROJECT_INC_DIR}src/alg)
include_directories(${PROJECT_INC_DIR}src/bug)
include_directories(${PROJECT_INC_DIR}src/dat)
include_directories(${PROJECT_INC_DIR}src/io)
include_directories(${PROJECT_INC_DIR}src/ipc)
include_directories(${PROJECT_INC_DIR}src/net)
include_directories(${PROJECT_INC_DIR}src/sig)
include_directories(${PROJECT_INC_DIR}src/sys)
include_directories(${PROJECT_INC_DIR}src/thr)

set(CMAKE_C_FLAGS "-Wall -fPIC")
set(CMAKE_C_FLAGS_DEBUG "-g -rdynamic")
set(CMAKE_C_FLAGS_RELEASE "-O2")

IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64") 
	ADD_DEFINITIONS(-fPIC) 
ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")

add_library(jnxlibc_core OBJECT ${RAW_SRC})
add_library (jnxcs STATIC $<TARGET_OBJECTS:jnxlibc_core>)
add_library (jnxc SHARED $<TARGET_OBJECTS:jnxlibc_core>)
target_link_libraries(jnxc pthread)
target_link_libraries(jnxcs pthread)
install(TARGETS jnxcs DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS jnxc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(DIRECTORY jnxc_headers DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
